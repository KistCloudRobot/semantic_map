<?xml version="1.0"?>
<robot name="jackal" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<property name="PI" value="3.1415926535897931" />
	<property name="wheelbase" value="0.262" />
	<property name="track" value="0.37559" />
	<property name="wheel_vertical_offset" value="0.0345" />
	<property name="footprint_vertical_offset" value="-0.0655" />
	<property name="wheel_radius" value="0.098" />
	<property name="wheel_width" value="0.040" />
	<property name="chassis_length" value="0.420" />
	<property name="chassis_width" value="0.310" />
	<property name="chassis_height" value="0.184" />
	<property name="dummy_inertia" value="1e-09" />
	<property name="mount_spacing" value="0.120" />


	<material name="dark_grey">
		<color rgba="0.2 0.2 0.2 1.0" />
	</material>
	<material name="light_grey">
		<color rgba="0.4 0.4 0.4 1.0" />
	</material>
	<material name="yellow">
		<color rgba="0.8 0.8 0.0 1.0" />
	</material>
	<material name="black">
		<color rgba="0.15 0.15 0.15 1.0" />
	</material>

	<macro name="wheel" params="prefix *joint_pose">
		<link name="${prefix}_wheel_link">
			<visual>
				<origin xyz="0 0 0" rpy="${PI/2} 0 0" />
				<geometry>
					<mesh filename="package://smt_jackal_description/meshes/jackal-wheel.stl" />
				</geometry>
				<material name="black" />
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="${PI/2} 0 0" />
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}" />
				</geometry>
			</collision>
			<inertial>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<mass value="0.477" />
				<inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013" />
			</inertial>
		</link>
		<gazebo reference="${prefix}_wheel_link">
			<material>
				Gazebo/DarkGrey
			</material>
			<selfCollide>
				false
			</selfCollide>
			<mu1>0.6</mu1>
			<mu2>0.6</mu2>
			<kp>1000000.0</kp>
			<kd>10.0</kd>            
			<minDepth>0.001</minDepth>
			<maxContacts>50</maxContacts>
			<fdir1 value="0 0 1" />
		</gazebo>
		<joint name="${prefix}_wheel" type="continuous">
			<parent link="chassis_link" />
			<child link="${prefix}_wheel_link" />
			<insert_block name="joint_pose" />
			<axis xyz="0 1 0" />
		</joint>
		<!--
		In reality, Jackal has only two motors, one per side. However, it's more
		straightforward for Gazebo to simulate as if there's an actuator per wheel.
		-->
		<transmission name="${prefix}_wheel_trans">
			<type>
				transmission_interface/SimpleTransmission
			</type>
			<joint name="${prefix}_wheel">
				<hardwareInterface>
					hardware_interface/VelocityJointInterface
				</hardwareInterface>
			</joint>
			<actuator name="${prefix}_actuator">
				<mechanicalReduction>
					1
				</mechanicalReduction>
			</actuator>
		</transmission>
	</macro>

	<wheel prefix="front_left">
		<origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
	</wheel>
	<wheel prefix="front_right">
		<origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
	</wheel>
	<wheel prefix="rear_left">
		<origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
	</wheel>
	<wheel prefix="rear_right">
		<origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
	</wheel>

	<link name="base_link">
	</link>
	<joint name="base_link_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="chassis_link" />
	</joint>

	<link name="chassis_link">
		<visual>
			<origin xyz="0 0 ${footprint_vertical_offset}" rpy="${PI/2} 0 ${PI/2}" />
			<geometry>
				<mesh filename="package://smt_jackal_description/meshes/jackal-base.stl" />
			</geometry>
			<material name="dark_grey" />
		</visual>
		<collision>
			<origin xyz="0 0 ${chassis_height/2}" />
			<geometry>
				<box size="${chassis_length} ${chassis_width} ${chassis_height}" />
			</geometry>
		</collision>
		<inertial>
			<!-- Center of mass -->
			<origin xyz="0.012  0.002 0.067" rpy="0 0 0" />
			<mass value="16.523" />
			<!-- Moments of inertia: ( chassis without wheels ) -->
			<inertia ixx="0.3136" ixy="-0.0008" ixz="0.0164" iyy="0.3922" iyz="-0.0009" izz="0.4485" />
		</inertial>
	</link>

	<unless value="$(optenv JACKAL_FRONT_ACCESSORY_FENDER 0)">
		<link name="front_fender_link">
			<visual>
				<geometry>
					<mesh filename="package://smt_jackal_description/meshes/jackal-fender.stl" />
				</geometry>
				<material name="yellow" />
			</visual>
		</link>
	</unless>

	<if value="$(optenv JACKAL_FRONT_ACCESSORY_FENDER 0)">
		<link name="front_fender_link">
			<visual>
				<geometry>
					<mesh filename="package://smt_jackal_description/meshes/accessory_fender.stl" />
				</geometry>
				<material name="yellow" />
			</visual>
		</link>
		<link name="front_fender_accessory_link" />
		<joint name="front_fender_accessory_joint" type="fixed">
			<origin xyz="0.25629 0 0.07455" rpy="${PI} 0 0" />
			<parent link="front_fender_link" />
			<child link="front_fender_accessory_link" />
		</joint>
	</if>

	<joint name="front_fender_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0" />
		<parent link="chassis_link" />
		<child link="front_fender_link" />
	</joint>

	<unless value="$(optenv JACKAL_REAR_ACCESSORY_FENDER 0)">
		<link name="rear_fender_link">
			<visual>
				<geometry>
					<mesh filename="package://smt_jackal_description/meshes/jackal-fender.stl" />
				</geometry>
				<material name="yellow" />
			</visual>
		</link>
	</unless>

	<if value="$(optenv JACKAL_REAR_ACCESSORY_FENDER 0)">
		<link name="rear_fender_link">
			<visual>
				<geometry>
					<mesh filename="package://smt_jackal_description/meshes/accessory_fender.stl" />
				</geometry>
				<material name="yellow" />
			</visual>
		</link>
		<link name="rear_fender_accessory_link" />
		<joint name="rear_fender_accessory_joint" type="fixed">
			<origin xyz="0.25629 0 0.07455" rpy="${PI} 0 0" />
			<parent link="rear_fender_link" />
			<child link="rear_fender_accessory_link" />
		</joint>
	</if>

	<joint name="rear_fender_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 ${PI}" />
		<parent link="chassis_link" />
		<child link="rear_fender_link" />
	</joint>

	<!--
	TODO: Make this internal_imu_link or something, and use a mixed-in xacro
	to supply the joint between it and imu_link. This is important so that imu_link
	always points to the "active" IMU. When an upgrade IMU is connected, the
	internal_imu_link should remain, but imu_link should point to the upgrade one.
	-->
	<link name="imu_link">
		<inertial>
			<mass value="0.001" />
			<origin xyz="0 0 0" rpy="0 0 0" />
			<inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}" />
		</inertial>
	</link>

	<joint name="imu_joint" type="fixed">
		<parent link="chassis_link" />
		<child link="imu_link" />
	</joint>

	<!-- TODO: Same note as applies to imu_link -->
	<link name="navsat_link">
		<visual>
			<geometry>
				<cylinder radius="0.026" length="0.016" />
			</geometry>
			<origin xyz="0 0 0.008" />
			<material name="black" />
		</visual>
	</link>	
	<joint name="navsat_joint" type="fixed">
		<parent link="chassis_link" />
		<child link="navsat_link" />
		<origin xyz="-0.180 0.126 0.1815" />
	</joint>

	<link name="mid_mount">
	</link>
	<joint name="mid_mount_joint" type="fixed">
		<parent link="chassis_link" />
		<child link="mid_mount" />
		<origin xyz="0 0 ${chassis_height}" />
	</joint>

	<link name="rear_mount">
	</link>
	<joint name="rear_mount_joint" type="fixed">
		<parent link="mid_mount" />
		<child link="rear_mount" />
		<origin xyz="${-mount_spacing} 0 0" />
	</joint>

	<link name="front_mount">
	</link>
	<joint name="front_mount_joint" type="fixed">
		<parent link="mid_mount" />
		<child link="front_mount" />
		<origin xyz="${mount_spacing} 0 0" />
	</joint>

	<!-- Velodyne -->
	<joint name="velodyne_mount_joint" type="fixed">
		<parent link="mid_mount" />
		<child link="velodyne_mount_link" />
		<origin xyz="-0.06 0 0.7" rpy="0 0 0" />
	</joint>
	<link name="velodyne_mount_link">
		<inertial>
			<mass value="0.83" />
			<inertia ixx="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0" iyy="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0" izz="${0.5 * 0.83 * (0.0516*0.0516)}" />
		</inertial>
		<visual>
			<geometry>
				<mesh filename="package://smt_jackal_description/meshes/top_structure_KIST.dae" />
			</geometry>
			<origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2-0.09599}" />
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://smt_jackal_description/meshes/top_structure_KIST.dae" />
			</geometry>
			<origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2-0.09599}" />
		</collision>
	</link>

	<!-- Camera -->
	<joint name="camera_joint" type="fixed">
		<origin xyz="-0.06 0 0.67" rpy="0 ${0*3.14/180.0} 0" />
		<parent link="mid_mount" />
		<child link="camera_link" />
	</joint>
	<link name="camera_link" />
	<joint name="camera_rgb_joint" type="fixed">
		<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		<parent link="camera_link" />
		<child link="camera_rgb_frame" />
	</joint>
	<link name="camera_rgb_frame" />
	<joint name="camera_rgb_optical_joint" type="fixed">
		<origin xyz="0 0 0" rpy="-1.57 0 -1.57" />
		<parent link="camera_rgb_frame" />
		<child link="camera_rgb_optical_frame" />
	</joint>
	<link name="camera_rgb_optical_frame" />

	<!-- Bring in simulation data for Gazebo. -->
	<include filename="$(find smt_jackal_description)/urdf/jackal.gazebo" />
	
	<!--
	Optional standard accessories, including their simulation data. The rendering
	of these into the final description is controlled by optenv variables, which
	default each one to off.
	-->
	<include filename="$(find smt_jackal_description)/urdf/accessories.urdf.xacro" />
	
	<!-- Optional custom includes. -->
	<include filename="$(find smt_jackal_description)/urdf/accessories/VLP-16.urdf.xacro" />
	<VLP-16 parent="velodyne_mount_link" name="velodyne" topic="/velodyne_points" hz="10" samples="440">
		<origin xyz="0 0 0" rpy="0 0 0" />
	</VLP-16>
</robot>
